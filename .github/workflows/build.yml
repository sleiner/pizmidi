name: Build
on:
    pull_request:
    push:
        branches:
            # Release branches
            - main

jobs:
    build-mac-universal:
        name: macOS (universal)
        runs-on: macos-11
        env:
            PRESET: mac-universal
        steps:
            - name: Install ninja
              run: |
                  brew update
                  brew install ninja
            - name: Checkout pizmidi
              uses: actions/checkout@v2
            - name: Ccache
              # Builds on release branches shall always build everything from scratch:
              if: ${{ github.event_name == 'pull_request' }}
              uses: hendrikmuhs/ccache-action@5801e95cf1e42288c5778844eff2a1f8e56f24cd
              with:
                  key: ${{ env.PRESET }}
                  max-size: 2048M
            - name: Set additional options for configure step
              run: |
                  ADDITIONAL_CONFIGURE_OPTIONS=""

                  if [ ${{ github.event_name == 'pull_request' }} = true ]; then
                    # Use Ccache
                    ADDITIONAL_CONFIGURE_OPTIONS="${ADDITIONAL_CONFIGURE_OPTIONS} -D CMAKE_C_COMPILER_LAUNCHER=ccache"
                    ADDITIONAL_CONFIGURE_OPTIONS="${ADDITIONAL_CONFIGURE_OPTIONS} -D CMAKE_CXX_COMPILER_LAUNCHER=ccache"
                  fi

                  echo "Additional options for CMake are: \"${ADDITIONAL_CONFIGURE_OPTIONS}\""

                  # Persist for the next steps
                  echo "ADDITIONAL_CONFIGURE_OPTIONS=${ADDITIONAL_CONFIGURE_OPTIONS}" >> $GITHUB_ENV
            - name: Configure pizmidi
              run: cmake -S . --preset=$PRESET $ADDITIONAL_CONFIGURE_OPTIONS
            - name: Build pizmidi plugins
              run: cmake --build --preset=$PRESET --parallel
            - name: Build pizmidi packages
              run: cmake --build --preset=$PRESET --parallel --target package
            - name: Store packages
              uses: actions/upload-artifact@v2
              with:
                  name: packages
                  path: |
                      build/${{ env.PRESET }}/packages
                      !build/${{ env.PRESET }}/packages/_CPack_Packages
    build-ubuntu2004-x86_64:
        name: Ubuntu 20.04 (x86_64)
        runs-on: ubuntu-20.04
        env:
            PRESET: linux-native
        steps:
            - name: Install build dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    libasound2-dev libjack-jackd2-dev \
                    ladspa-sdk \
                    libcurl4-openssl-dev  \
                    libfreetype6-dev \
                    libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev \
                    libwebkit2gtk-4.0-dev \
                    libglu1-mesa-dev mesa-common-dev \
                    ninja-build
            - name: Checkout pizmidi
              uses: actions/checkout@v2
            - name: Ccache
              # Builds on the main branch shall always build everything from scratch:
              if: ${{ github.event_name == 'pull_request' }}
              uses: hendrikmuhs/ccache-action@5801e95cf1e42288c5778844eff2a1f8e56f24cd
              with:
                  key: ${{ env.PRESET }}
                  max-size: 2048M
            - name: Set additional options for configure step
              run: |
                  ADDITIONAL_CONFIGURE_OPTIONS=""

                  if [ ${{ github.event_name == 'pull_request' }} = true ]; then
                    # Use Ccache
                    ADDITIONAL_CONFIGURE_OPTIONS="${ADDITIONAL_CONFIGURE_OPTIONS} -D CMAKE_C_COMPILER_LAUNCHER=ccache"
                    ADDITIONAL_CONFIGURE_OPTIONS="${ADDITIONAL_CONFIGURE_OPTIONS} -D CMAKE_CXX_COMPILER_LAUNCHER=ccache"
                  fi

                  echo "Additional options for CMake are: \"${ADDITIONAL_CONFIGURE_OPTIONS}\""

                  # Persist for the next steps
                  echo "ADDITIONAL_CONFIGURE_OPTIONS=${ADDITIONAL_CONFIGURE_OPTIONS}" >> $GITHUB_ENV
            - name: Configure pizmidi
              run: cmake -S . --preset=$PRESET $ADDITIONAL_CONFIGURE_OPTIONS
            - name: Build pizmidi plugins
              run: cmake --build --preset=$PRESET --parallel
            - name: Build pizmidi packages
              run: cmake --build --preset=$PRESET --parallel --target package
            - name: Store packages
              uses: actions/upload-artifact@v2
              with:
                  name: packages
                  path: |
                      build/${{ env.PRESET }}/packages
                      !build/${{ env.PRESET }}/packages/_CPack_Packages
    build-windows:
        name: Windows (x86_64)
        runs-on: windows-2019
        env:
            PRESET: windows-native
        steps:
            - name: Checkout pizmidi
              uses: actions/checkout@v2
            - name: Configure pizmidi
              run: cmake -S . --preset=$Env:PRESET
            - name: Build pizmidi plugins
              run: cmake --build --preset=$Env:PRESET --parallel
            - name: Build pizmidi packages
              run: cmake --build --preset=$Env:PRESET --parallel --target package
            - name: Store packages
              uses: actions/upload-artifact@v2
              with:
                  name: packages
                  path: |
                      build/${{ env.PRESET }}/packages
                      !build/${{ env.PRESET }}/packages/_CPack_Packages
